// user.go
package main

import (
	"encoding/json"
	"fmt"
	"strconv"
	"strings"
	"time"

	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
)

// UserState –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–∏–∞–ª–æ–≥–∞ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
type UserState int

const (
	StateInitial UserState = iota
	StateAskSex
	StateAskAge
	StateAskHeight
	StateAskWeight
	StateAskDiabetes
	StateAskLevel
	StateAskGoal
	StateAskType
	StatePayment
	StateComplete
)

// CallbackPrefix - –ø—Ä–µ—Ñ–∏–∫—Å—ã –¥–ª—è callback –¥–∞–Ω–Ω—ã—Ö
const (
	CallbackSex      = "sex:"
	CallbackDiabetes = "dia:"
	CallbackLevel    = "lvl:"
	CallbackGoal     = "gol:"
	CallbackType     = "typ:"
	CallbackAsk      = "ask:"
)

// UserData —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
type UserData struct {
	Sex         string    `json:"Sex"`
	Age         int       `json:"Age"`
	Height      int       `json:"Height"`
	Weight      int       `json:"Weight"`
	Diabetes    string    `json:"Diabetes"`
	Level       string    `json:"Level"`
	FitnessGoal string    `json:"Fitness Goal"`
	FitnessType string    `json:"Fitness Type"`
	PaymentID   string    `json:"payment_id,omitempty"`
	CreatedAt   time.Time `json:"created_at"`
}

// String –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫–æ–≤–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
func (u *UserData) String() string {
	jsonData, err := json.MarshalIndent(u, "", "  ")
	if err != nil {
		return "–û—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö"
	}
	return string(jsonData)
}

// UserSession –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç —Å–µ—Å—Å–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
type UserSession struct {
	UserID          int64
	State           UserState
	Data            UserData
	CreatedAt       time.Time
	MessageCount    int       // –°—á–µ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π
	LastCommandTime time.Time // –í—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–π –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è
	LastCommand     string    // –ü–æ—Å–ª–µ–¥–Ω—è—è –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è
	LastCallback    string    // –ü–æ—Å–ª–µ–¥–Ω–∏–π callback –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è
	LastMessageID   int       // ID –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∫–Ω–æ–ø–∫–∞–º–∏
}

// NewUserSession —Å–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—É—é —Å–µ—Å—Å–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
func NewUserSession(userID int64) *UserSession {
	return &UserSession{
		UserID:          userID,
		State:           StateInitial,
		Data:            UserData{},
		CreatedAt:       time.Now(),
		MessageCount:    0,
		LastCommandTime: time.Time{},
		LastCallback:    "",
		LastMessageID:   0,
	}
}

// IncrementMessageCount —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç —Å—á–µ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π
func (s *UserSession) IncrementMessageCount() bool {
	const MaxMessages = 10 // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π
	s.MessageCount++
	return s.MessageCount <= MaxMessages
}

// CheckDuplicateCommand –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –∫–æ–º–∞–Ω–¥–∞ –¥—É–±–ª–∏–∫–∞—Ç–æ–º
func (s *UserSession) CheckDuplicateCommand(command string) bool {
	// –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —ç—Ç–æ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –∫–æ–º–∞–Ω–¥–æ–π –≤ —Ç–µ—á–µ–Ω–∏–µ 2 —Å–µ–∫—É–Ω–¥
	if command != "" && command == s.LastCommand && time.Since(s.LastCommandTime) < 2*time.Second {
		return true
	}
	s.LastCommand = command
	s.LastCommandTime = time.Now()
	return false
}

// CheckDuplicateCallback –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ callback –¥—É–±–ª–∏–∫–∞—Ç–æ–º
func (s *UserSession) CheckDuplicateCallback(callback string) bool {
	// –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —ç—Ç–æ –ø–æ–≤—Ç–æ—Ä–Ω—ã–º callback –≤ —Ç–µ—á–µ–Ω–∏–µ 2 —Å–µ–∫—É–Ω–¥
	if callback != "" && callback == s.LastCallback && time.Since(s.LastCommandTime) < 2*time.Second {
		return true
	}
	s.LastCallback = callback
	s.LastCommandTime = time.Now()
	return false
}

// GetKeyboardForState –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
func (s *UserSession) GetKeyboardForState() *tgbotapi.InlineKeyboardMarkup {
	switch s.State {
	case StateAskSex:
		keyboard := tgbotapi.NewInlineKeyboardMarkup(
			tgbotapi.NewInlineKeyboardRow(
				tgbotapi.NewInlineKeyboardButtonData("–ú—É–∂—Å–∫–æ–π", CallbackSex+"male"),
				tgbotapi.NewInlineKeyboardButtonData("–ñ–µ–Ω—Å–∫–∏–π", CallbackSex+"female"),
			),
		)
		return &keyboard

	case StateAskDiabetes:
		keyboard := tgbotapi.NewInlineKeyboardMarkup(
			tgbotapi.NewInlineKeyboardRow(
				tgbotapi.NewInlineKeyboardButtonData("–î–∞", CallbackDiabetes+"yes"),
				tgbotapi.NewInlineKeyboardButtonData("–ù–µ—Ç", CallbackDiabetes+"no"),
			),
		)
		return &keyboard

	case StateAskLevel:
		keyboard := tgbotapi.NewInlineKeyboardMarkup(
			tgbotapi.NewInlineKeyboardRow(
				tgbotapi.NewInlineKeyboardButtonData("–ù–∞—á–∏–Ω–∞—é—â–∏–π", CallbackLevel+"beginner"),
			),
			tgbotapi.NewInlineKeyboardRow(
				tgbotapi.NewInlineKeyboardButtonData("–°—Ä–µ–¥–Ω–∏–π", CallbackLevel+"intermediate"),
			),
			tgbotapi.NewInlineKeyboardRow(
				tgbotapi.NewInlineKeyboardButtonData("–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π", CallbackLevel+"advanced"),
			),
		)
		return &keyboard

	case StateAskGoal:
		keyboard := tgbotapi.NewInlineKeyboardMarkup(
			tgbotapi.NewInlineKeyboardRow(
				tgbotapi.NewInlineKeyboardButtonData("–ü–æ—Ö—É–¥–µ–Ω–∏–µ", CallbackGoal+"weight_loss"),
			),
			tgbotapi.NewInlineKeyboardRow(
				tgbotapi.NewInlineKeyboardButtonData("–ù–∞–±–æ—Ä –º–∞—Å—Å—ã", CallbackGoal+"muscle_gain"),
			),
			tgbotapi.NewInlineKeyboardRow(
				tgbotapi.NewInlineKeyboardButtonData("–ü–æ–¥–¥–µ—Ä–∂–∞–Ω–∏–µ —Ñ–æ—Ä–º—ã", CallbackGoal+"maintenance"),
			),
			tgbotapi.NewInlineKeyboardRow(
				tgbotapi.NewInlineKeyboardButtonData("–£–ª—É—á—à–µ–Ω–∏–µ –≤—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç–∏", CallbackGoal+"endurance"),
			),
		)
		return &keyboard

	case StateAskType:
		keyboard := tgbotapi.NewInlineKeyboardMarkup(
			tgbotapi.NewInlineKeyboardRow(
				tgbotapi.NewInlineKeyboardButtonData("–°–∏–ª–æ–≤—ã–µ", CallbackType+"strength"),
				tgbotapi.NewInlineKeyboardButtonData("–ö–∞—Ä–¥–∏–æ", CallbackType+"cardio"),
			),
			tgbotapi.NewInlineKeyboardRow(
				tgbotapi.NewInlineKeyboardButtonData("–°–º–µ—à–∞–Ω–Ω—ã–µ", CallbackType+"mixed"),
				tgbotapi.NewInlineKeyboardButtonData("–ô–æ–≥–∞", CallbackType+"yoga"),
			),
			tgbotapi.NewInlineKeyboardRow(
				tgbotapi.NewInlineKeyboardButtonData("–ü–∏–ª–∞—Ç–µ—Å", CallbackType+"pilates"),
				tgbotapi.NewInlineKeyboardButtonData("–î—Ä—É–≥–æ–µ", CallbackType+"other"),
			),
		)
		return &keyboard

	case StatePayment:
		keyboard := tgbotapi.NewInlineKeyboardMarkup(
			tgbotapi.NewInlineKeyboardRow(
				tgbotapi.NewInlineKeyboardButtonData("–û–ø–ª–∞—Ç–∏—Ç—å", "pay"),
			),
		)
		return &keyboard

	case StateComplete:
		// –ö–Ω–æ–ø–∫–∏ –¥–ª—è –≤–æ–ø—Ä–æ—Å–æ–≤ –ø–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã
		keyboard := tgbotapi.NewInlineKeyboardMarkup(
			tgbotapi.NewInlineKeyboardRow(
				tgbotapi.NewInlineKeyboardButtonData("–£—Ç–æ—á–Ω–∏—Ç—å –ø–∏—Ç–∞–Ω–∏–µ", CallbackAsk+"nutrition"),
				tgbotapi.NewInlineKeyboardButtonData("–£—Ç–æ—á–Ω–∏—Ç—å —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è", CallbackAsk+"exercises"),
			),
			tgbotapi.NewInlineKeyboardRow(
				tgbotapi.NewInlineKeyboardButtonData("–ö–∞–∫ –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å", CallbackAsk+"progress"),
				tgbotapi.NewInlineKeyboardButtonData("–ß—Ç–æ –¥–µ–ª–∞—Ç—å –ø—Ä–∏ –¥–∏–∞–±–µ—Ç–µ", CallbackAsk+"diabetes"),
			),
		)
		return &keyboard
	}

	return nil
}

// GetNextQuestion –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
func (s *UserSession) GetNextQuestion() string {
	switch s.State {
	case StateAskSex:
		return "–£–∫–∞–∂–∏—Ç–µ –≤–∞—à –ø–æ–ª:"
	case StateAskAge:
		return "–£–∫–∞–∂–∏—Ç–µ –≤–∞—à –≤–æ–∑—Ä–∞—Å—Ç (–ø–æ–ª–Ω—ã—Ö –ª–µ—Ç):"
	case StateAskHeight:
		return "–£–∫–∞–∂–∏—Ç–µ –≤–∞—à —Ä–æ—Å—Ç –≤ —Å–∞–Ω—Ç–∏–º–µ—Ç—Ä–∞—Ö (–Ω–∞–ø—Ä–∏–º–µ—Ä, 175):"
	case StateAskWeight:
		return "–£–∫–∞–∂–∏—Ç–µ –≤–∞—à –≤–µ—Å –≤ –∫–∏–ª–æ–≥—Ä–∞–º–º–∞—Ö (–Ω–∞–ø—Ä–∏–º–µ—Ä, 70):"
	case StateAskDiabetes:
		return "–£ –≤–∞—Å –µ—Å—Ç—å –¥–∏–∞–±–µ—Ç?"
	case StateAskLevel:
		return "–û—Ü–µ–Ω–∏—Ç–µ –≤–∞—à —Ç–µ–∫—É—â–∏–π —É—Ä–æ–≤–µ–Ω—å —Ñ–∏–∑–∏—á–µ—Å–∫–æ–π –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏:"
	case StateAskGoal:
		return "–ö–∞–∫–æ–≤–∞ –≤–∞—à–∞ –≥–ª–∞–≤–Ω–∞—è —Ü–µ–ª—å?"
	case StateAskType:
		return "–ö–∞–∫–æ–π —Ç–∏–ø —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ –≤—ã –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ—Ç–µ?"
	case StatePayment:
		return fmt.Sprintf("–°–ø–∞—Å–∏–±–æ! –í–∞—à–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è —Å–æ–±—Ä–∞–Ω–∞:\n\n%s\n\n–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–ø–ª–∞—Ç–∏—Ç–µ —É—Å–ª—É–≥—É. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ /pay", s.Data.String())
	case StateComplete:
		return "–í–∞—à–∞ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ —É–∂–µ —Å–æ–∑–¥–∞–Ω–∞. –ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /start"
	default:
		return "–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞ —Å –∫–æ–º–∞–Ω–¥—ã /start"
	}
}

// GetAskQuestionAnswer –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ—Ç–≤–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å –æ –ø—Ä–æ–≥—Ä–∞–º–º–µ
// GetAskQuestionAnswer –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ—Ç–≤–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å –æ –ø—Ä–æ–≥—Ä–∞–º–º–µ
func (s *UserSession) GetAskQuestionAnswer(question string) string {
	switch question {
	case "nutrition":
		// –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –ø–∏—Ç–∞–Ω–∏—é
		baseText := "üçΩÔ∏è **–†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò –ü–û –ü–ò–¢–ê–ù–ò–Æ**\n\n"

		weight := s.Data.Weight
		height := s.Data.Height
		goal := s.Data.FitnessGoal

		if goal == "–ø–æ—Ö—É–¥–µ–Ω–∏–µ" {
			baseText += fmt.Sprintf("–î–ª—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –≤–∞—à–µ–π —Ü–µ–ª–∏ –ø–æ—Ö—É–¥–µ–Ω–∏—è, —Å —É—á–µ—Ç–æ–º –≤–∞—à–µ–≥–æ –≤–µ—Å–∞ %d –∫–≥ –∏ —Ä–æ—Å—Ç–∞ %d —Å–º, —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø–æ—Ç—Ä–µ–±–ª—è—Ç—å –ø—Ä–∏–º–µ—Ä–Ω–æ %d-%d –∫–∞–ª–æ—Ä–∏–π –≤ –¥–µ–Ω—å, —Å –¥–µ—Ñ–∏—Ü–∏—Ç–æ–º 400-500 –∫–∞–ª–æ—Ä–∏–π.\n\n",
				weight, height, (weight*30)-500, (weight*30)-400)
		} else if goal == "–Ω–∞–±–æ—Ä –º–∞—Å—Å—ã" {
			baseText += fmt.Sprintf("–î–ª—è –Ω–∞–±–æ—Ä–∞ –º—ã—à–µ—á–Ω–æ–π –º–∞—Å—Å—ã, —Å —É—á–µ—Ç–æ–º –≤–∞—à–µ–≥–æ –≤–µ—Å–∞ %d –∫–≥, —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø–æ—Ç—Ä–µ–±–ª—è—Ç—å –ø—Ä–∏–º–µ—Ä–Ω–æ %d-%d –∫–∞–ª–æ—Ä–∏–π –≤ –¥–µ–Ω—å, —Å –ø—Ä–æ—Ñ–∏—Ü–∏—Ç–æ–º 300-400 –∫–∞–ª–æ—Ä–∏–π.\n\n",
				weight, (weight*30)+300, (weight*30)+400)
		} else {
			baseText += fmt.Sprintf("–î–ª—è –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏—è –≤–∞—à–µ–≥–æ —Ç–µ–∫—É—â–µ–≥–æ –≤–µ—Å–∞ %d –∫–≥ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø–æ—Ç—Ä–µ–±–ª—è—Ç—å –ø—Ä–∏–º–µ—Ä–Ω–æ %d-%d –∫–∞–ª–æ—Ä–∏–π –≤ –¥–µ–Ω—å.\n\n",
				weight, weight*28, weight*30)
		}

		baseText += "–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º–æ–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –º–∞–∫—Ä–æ–Ω—É—Ç—Ä–∏–µ–Ω—Ç–æ–≤:\n" +
			"- –ë–µ–ª–∫–∏: 1.6-2.0 –≥ –Ω–∞ –∫–≥ –≤–µ—Å–∞ —Ç–µ–ª–∞ (–ø—Ä–∏–º–µ—Ä–Ω–æ " + fmt.Sprintf("%d-%d", int(float64(weight)*1.6), int(float64(weight)*2.0)) + " –≥ –≤ –¥–µ–Ω—å)\n" +
			"- –ñ–∏—Ä—ã: 0.8-1.0 –≥ –Ω–∞ –∫–≥ –≤–µ—Å–∞ —Ç–µ–ª–∞ (–ø—Ä–∏–º–µ—Ä–Ω–æ " + fmt.Sprintf("%d-%d", int(float64(weight)*0.8), int(float64(weight)*1.0)) + " –≥ –≤ –¥–µ–Ω—å)\n" +
			"- –£–≥–ª–µ–≤–æ–¥—ã: –æ—Å—Ç–∞–≤—à–∞—è—Å—è —á–∞—Å—Ç—å –∫–∞–ª–æ—Ä–∏–π\n\n"

		baseText += "**–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–π —Ä–µ–∂–∏–º –ø–∏—Ç–∞–Ω–∏—è:**\n" +
			"1. –ó–∞–≤—Ç—Ä–∞–∫: –±–µ–ª–∫–æ–≤–∞—è –ø–∏—â–∞ + —Å–ª–æ–∂–Ω—ã–µ —É–≥–ª–µ–≤–æ–¥—ã (–æ–≤—Å—è–Ω–∫–∞, —è–π—Ü–∞, –Ω–µ–∂–∏—Ä–Ω—ã–π —Ç–≤–æ—Ä–æ–≥)\n" +
			"2. –ü–µ—Ä–µ–∫—É—Å: —Ñ—Ä—É–∫—Ç –∏–ª–∏ –ø—Ä–æ—Ç–µ–∏–Ω–æ–≤—ã–π –∫–æ–∫—Ç–µ–π–ª—å\n" +
			"3. –û–±–µ–¥: –±–µ–ª–æ–∫ + –æ–≤–æ—â–∏ + —Å–ª–æ–∂–Ω—ã–µ —É–≥–ª–µ–≤–æ–¥—ã (–º—è—Å–æ/—Ä—ã–±–∞, –æ–≤–æ—â–∏, –≥—Ä–µ—á–∫–∞/—Ä–∏—Å/–∫–∏–Ω–æ–∞)\n" +
			"4. –ü–µ—Ä–µ–∫—É—Å: –æ—Ä–µ—Ö–∏, –π–æ–≥—É—Ä—Ç –∏–ª–∏ —Ç–≤–æ—Ä–æ–≥\n" +
			"5. –£–∂–∏–Ω (–º–∏–Ω–∏–º—É–º –∑–∞ 2-3 —á–∞—Å–∞ –¥–æ —Å–Ω–∞): –±–µ–ª–æ–∫ + –æ–≤–æ—â–∏ (–∫—É—Ä–∏–Ω–∞—è –≥—Ä—É–¥–∫–∞/—Ä—ã–±–∞, –æ–≤–æ—â–Ω–æ–π —Å–∞–ª–∞—Ç)\n\n"

		baseText += "**–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –ø–∏—Ç—å–µ–≤–æ–º—É —Ä–µ–∂–∏–º—É:**\n" +
			fmt.Sprintf("- –ü–µ–π—Ç–µ –Ω–µ –º–µ–Ω–µ–µ %d –º–ª –≤–æ–¥—ã –≤ –¥–µ–Ω—å\n", weight*30) +
			"- –ü–µ–π—Ç–µ —Å—Ç–∞–∫–∞–Ω –≤–æ–¥—ã –∑–∞ 30 –º–∏–Ω—É—Ç –¥–æ –∫–∞–∂–¥–æ–≥–æ –ø—Ä–∏–µ–º–∞ –ø–∏—â–∏\n" +
			"- –û–≥—Ä–∞–Ω–∏—á—å—Ç–µ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ –∞–ª–∫–æ–≥–æ–ª—è –∏ —Å–ª–∞–¥–∫–∏—Ö –Ω–∞–ø–∏—Ç–∫–æ–≤\n\n"

		if s.Data.Diabetes == "–¥–∞" {
			baseText += "**–û—Å–æ–±—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø—Ä–∏ –¥–∏–∞–±–µ—Ç–µ:**\n" +
				"- –ò–∑–±–µ–≥–∞–π—Ç–µ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ —Å –≤—ã—Å–æ–∫–∏–º –≥–ª–∏–∫–µ–º–∏—á–µ—Å–∫–∏–º –∏–Ω–¥–µ–∫—Å–æ–º\n" +
				"- –ö–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–π—Ç–µ –ø–æ—Ä—Ü–∏–∏ —É–≥–ª–µ–≤–æ–¥–æ–≤\n" +
				"- –†–∞–≤–Ω–æ–º–µ—Ä–Ω–æ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª—è–π—Ç–µ —É–≥–ª–µ–≤–æ–¥—ã –≤ —Ç–µ—á–µ–Ω–∏–µ –¥–Ω—è\n" +
				"- –†–µ–≥—É–ª—è—Ä–Ω–æ –∏–∑–º–µ—Ä—è–π—Ç–µ —É—Ä–æ–≤–µ–Ω—å —Å–∞—Ö–∞—Ä–∞ –≤ –∫—Ä–æ–≤–∏\n" +
				"- –ü—Ä–æ–∫–æ–Ω—Å—É–ª—å—Ç–∏—Ä—É–π—Ç–µ—Å—å —Å —ç–Ω–¥–æ–∫—Ä–∏–Ω–æ–ª–æ–≥–æ–º –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –ø–ª–∞–Ω–∞ –ø–∏—Ç–∞–Ω–∏—è\n"
		}

		return baseText

	case "exercises":
		// –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è–º
		baseText := "üí™ **–ü–†–û–ì–†–ê–ú–ú–ê –£–ü–†–ê–ñ–ù–ï–ù–ò–ô**\n\n"
		fitnessType := s.Data.FitnessType

		if fitnessType == "—Å–∏–ª–æ–≤—ã–µ" {
			baseText += "**–°–∏–ª–æ–≤–∞—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ A (–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫):**\n" +
				"1. –†–∞–∑–º–∏–Ω–∫–∞: 5-10 –º–∏–Ω—É—Ç –∫–∞—Ä–¥–∏–æ –∏ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∞—è —Ä–∞—Å—Ç—è–∂–∫–∞\n" +
				"2. –ü—Ä–∏—Å–µ–¥–∞–Ω–∏—è: 4 –ø–æ–¥—Ö–æ–¥–∞ –ø–æ 10-12 –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π\n" +
				"3. –ñ–∏–º –ª–µ–∂–∞: 4 –ø–æ–¥—Ö–æ–¥–∞ –ø–æ 8-10 –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π\n" +
				"4. –¢—è–≥–∞ –≤ –Ω–∞–∫–ª–æ–Ω–µ: 3 –ø–æ–¥—Ö–æ–¥–∞ –ø–æ 10-12 –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π\n" +
				"5. –û—Ç–∂–∏–º–∞–Ω–∏—è: 3 –ø–æ–¥—Ö–æ–¥–∞ –¥–æ –æ—Ç–∫–∞–∑–∞\n" +
				"6. –ü–ª–∞–Ω–∫–∞: 3 –ø–æ–¥—Ö–æ–¥–∞ –ø–æ 30-60 —Å–µ–∫—É–Ω–¥\n" +
				"7. –†–∞—Å—Ç—è–∂–∫–∞: 5-10 –º–∏–Ω—É—Ç\n\n"

			baseText += "**–°–∏–ª–æ–≤–∞—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ B (–ß–µ—Ç–≤–µ—Ä–≥):**\n" +
				"1. –†–∞–∑–º–∏–Ω–∫–∞: 5-10 –º–∏–Ω—É—Ç –∫–∞—Ä–¥–∏–æ –∏ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∞—è —Ä–∞—Å—Ç—è–∂–∫–∞\n" +
				"2. –°—Ç–∞–Ω–æ–≤–∞—è —Ç—è–≥–∞: 4 –ø–æ–¥—Ö–æ–¥–∞ –ø–æ 8-10 –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π\n" +
				"3. –ñ–∏–º –≥–∞–Ω—Ç–µ–ª–µ–π –Ω–∞–¥ –≥–æ–ª–æ–≤–æ–π: 3 –ø–æ–¥—Ö–æ–¥–∞ –ø–æ 10-12 –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π\n" +
				"4. –ü–æ–¥—Ç—è–≥–∏–≤–∞–Ω–∏—è (–∏–ª–∏ —Ç—è–≥–∞ –≤–µ—Ä—Ö–Ω–µ–≥–æ –±–ª–æ–∫–∞): 3 –ø–æ–¥—Ö–æ–¥–∞ –¥–æ –æ—Ç–∫–∞–∑–∞\n" +
				"5. –°–≥–∏–±–∞–Ω–∏—è —Ä—É–∫ –Ω–∞ –±–∏—Ü–µ–ø—Å: 3 –ø–æ–¥—Ö–æ–¥–∞ –ø–æ 12-15 –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π\n" +
				"6. –†–∞–∑–≥–∏–±–∞–Ω–∏—è —Ä—É–∫ –Ω–∞ —Ç—Ä–∏—Ü–µ–ø—Å: 3 –ø–æ–¥—Ö–æ–¥–∞ –ø–æ 12-15 –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π\n" +
				"7. –†–∞—Å—Ç—è–∂–∫–∞: 5-10 –º–∏–Ω—É—Ç\n\n"
		} else if fitnessType == "–∫–∞—Ä–¥–∏–æ" {
			baseText += "**–ö–∞—Ä–¥–∏–æ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ (–í—Ç–æ—Ä–Ω–∏–∫, –ü—è—Ç–Ω–∏—Ü–∞):**\n" +
				"1. –†–∞–∑–º–∏–Ω–∫–∞: 5 –º–∏–Ω—É—Ç –ª–µ–≥–∫–æ–π —Ö–æ–¥—å–±—ã –∏–ª–∏ –º–µ–¥–ª–µ–Ω–Ω–æ–≥–æ –±–µ–≥–∞\n" +
				"2. –ò–Ω—Ç–µ—Ä–≤–∞–ª—å–Ω–∞—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞: 30 —Å–µ–∫—É–Ω–¥ —Å–ø—Ä–∏–Ω—Ç–∞ + 90 —Å–µ–∫—É–Ω–¥ —Ö–æ–¥—å–±—ã (–ø–æ–≤—Ç–æ—Ä–∏—Ç—å 10 —Ä–∞–∑)\n" +
				"3. –ó–∞–º–∏–Ω–∫–∞: 5 –º–∏–Ω—É—Ç –º–µ–¥–ª–µ–Ω–Ω–æ–π —Ö–æ–¥—å–±—ã\n\n"

			baseText += "**HIIT —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ (–°—É–±–±–æ—Ç–∞):**\n" +
				"1. –†–∞–∑–º–∏–Ω–∫–∞: 5 –º–∏–Ω—É—Ç\n" +
				"2. –ö—Ä—É–≥–æ–≤–∞—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ (–±–µ–∑ –æ—Ç–¥—ã—Ö–∞ –º–µ–∂–¥—É —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è–º–∏, 60 —Å–µ–∫ –æ—Ç–¥—ã—Ö–∞ –º–µ–∂–¥—É –∫—Ä—É–≥–∞–º–∏):\n" +
				"   - –ë—ë—Ä–ø–∏: 30 —Å–µ–∫—É–Ω–¥\n" +
				"   - –ü—Ä–∏—Å–µ–¥–∞–Ω–∏—è —Å –≤—ã–ø—Ä—ã–≥–∏–≤–∞–Ω–∏–µ–º: 30 —Å–µ–∫—É–Ω–¥\n" +
				"   - –ê–ª—å–ø–∏–Ω–∏—Å—Ç: 30 —Å–µ–∫—É–Ω–¥\n" +
				"   - –°–∫—Ä—É—á–∏–≤–∞–Ω–∏—è: 30 —Å–µ–∫—É–Ω–¥\n" +
				"   - –ü—Ä—ã–∂–∫–∏ —Å–æ —Å–∫–∞–∫–∞–ª–∫–æ–π: 60 —Å–µ–∫—É–Ω–¥\n" +
				"3. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –∫—Ä—É–≥ 3-5 —Ä–∞–∑\n" +
				"4. –ó–∞–º–∏–Ω–∫–∞ –∏ —Ä–∞—Å—Ç—è–∂–∫–∞: 5-10 –º–∏–Ω—É—Ç\n\n"
		} else {
			baseText += "**–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –≤—Å–µ–≥–æ —Ç–µ–ª–∞ (3 —Ä–∞–∑–∞ –≤ –Ω–µ–¥–µ–ª—é - –ø–Ω, —Å—Ä, –ø—Ç):**\n" +
				"1. –†–∞–∑–º–∏–Ω–∫–∞: 5-10 –º–∏–Ω—É—Ç –∫–∞—Ä–¥–∏–æ –∏ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∞—è —Ä–∞—Å—Ç—è–∂–∫–∞\n" +
				"2. –ü—Ä–∏—Å–µ–¥–∞–Ω–∏—è: 3 –ø–æ–¥—Ö–æ–¥–∞ –ø–æ 12-15 –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π\n" +
				"3. –û—Ç–∂–∏–º–∞–Ω–∏—è: 3 –ø–æ–¥—Ö–æ–¥–∞ –ø–æ 10-12 –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π\n" +
				"4. –ì–∏–ø–µ—Ä—ç–∫—Å—Ç–µ–Ω–∑–∏—è: 3 –ø–æ–¥—Ö–æ–¥–∞ –ø–æ 12-15 –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π\n" +
				"5. –ü–ª–∞–Ω–∫–∞: 3 –ø–æ–¥—Ö–æ–¥–∞ –ø–æ 30-60 —Å–µ–∫—É–Ω–¥\n" +
				"6. –ö–∞—Ä–¥–∏–æ: 15-20 –º–∏–Ω—É—Ç (–±–µ–≥, –≤–µ–ª–æ—Å–∏–ø–µ–¥, —ç–ª–ª–∏–ø—Å)\n" +
				"7. –†–∞—Å—Ç—è–∂–∫–∞: 5-10 –º–∏–Ω—É—Ç\n\n"
		}

		baseText += "**–û–±—â–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:**\n" +
			"- –í—Å–µ–≥–¥–∞ –Ω–∞—á–∏–Ω–∞–π—Ç–µ —Å —Ä–∞–∑–º–∏–Ω–∫–∏, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å —Ç—Ä–∞–≤–º\n" +
			"- –ö–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–π—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Ç–µ—Ö–Ω–∏–∫—É –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π\n" +
			"- –ü–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ —É–≤–µ–ª–∏—á–∏–≤–∞–π—Ç–µ –Ω–∞–≥—Ä—É–∑–∫—É –∫–∞–∂–¥—ã–µ 2-3 –Ω–µ–¥–µ–ª–∏\n" +
			"- –ï—Å–ª–∏ —á—É–≤—Å—Ç–≤—É–µ—Ç–µ –±–æ–ª—å (–Ω–µ –ø—É—Ç–∞—Ç—å —Å –º—ã—à–µ—á–Ω–æ–π —É—Å—Ç–∞–ª–æ—Å—Ç—å—é), –ø—Ä–µ–∫—Ä–∞—Ç–∏—Ç–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è\n" +
			"- –î–µ–ª–∞–π—Ç–µ 1-2 –¥–Ω—è –æ—Ç–¥—ã—Ö–∞ –≤ –Ω–µ–¥–µ–ª—é –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è\n\n"

		if s.Data.Level == "–Ω–∞—á–∏–Ω–∞—é—â–∏–π" {
			baseText += "**–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö:**\n" +
				"- –ù–∞—á–Ω–∏—Ç–µ —Å –º–µ–Ω—å—à–µ–≥–æ –≤–µ—Å–∞ –∏ –º–µ–Ω—å—à–µ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π\n" +
				"- –°–æ—Å—Ä–µ–¥–æ—Ç–æ—á—å—Ç–µ—Å—å –Ω–∞ –∏–∑—É—á–µ–Ω–∏–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Ç–µ—Ö–Ω–∏–∫–∏\n" +
				"- –£–≤–µ–ª–∏—á–∏–≤–∞–π—Ç–µ –Ω–∞–≥—Ä—É–∑–∫—É –ø–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ\n"
		}

		return baseText

	case "progress":
		// –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—é –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
		return "üìä **–ö–ê–ö –û–¢–°–õ–ï–ñ–ò–í–ê–¢–¨ –ü–†–û–ì–†–ï–°–°**\n\n" +
			"**–û—Å–Ω–æ–≤–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è:**\n" +
			"1. **–í–µ—Å** - –≤–∑–≤–µ—à–∏–≤–∞–π—Ç–µ—Å—å 1-2 —Ä–∞–∑–∞ –≤ –Ω–µ–¥–µ–ª—é, –≤ –æ–¥–Ω–æ –∏ —Ç–æ –∂–µ –≤—Ä–µ–º—è (–ª—É—á—à–µ —É—Ç—Ä–æ–º –Ω–∞—Ç–æ—â–∞–∫)\n" +
			"2. **–ó–∞–º–µ—Ä—ã —Ç–µ–ª–∞** - –¥–µ–ª–∞–π—Ç–µ –∑–∞–º–µ—Ä—ã –æ—Å–Ω–æ–≤–Ω—ã—Ö —á–∞—Å—Ç–µ–π —Ç–µ–ª–∞ —Ä–∞–∑ –≤ 2-4 –Ω–µ–¥–µ–ª–∏:\n" +
			"   - –û–∫—Ä—É–∂–Ω–æ—Å—Ç—å —à–µ–∏\n" +
			"   - –û–∫—Ä—É–∂–Ω–æ—Å—Ç—å –≥—Ä—É–¥–∏\n" +
			"   - –û–∫—Ä—É–∂–Ω–æ—Å—Ç—å —Ç–∞–ª–∏–∏\n" +
			"   - –û–∫—Ä—É–∂–Ω–æ—Å—Ç—å –±–µ–¥–µ—Ä\n" +
			"   - –û–∫—Ä—É–∂–Ω–æ—Å—Ç—å –±–∏—Ü–µ–ø—Å–∞\n" +
			"   - –û–∫—Ä—É–∂–Ω–æ—Å—Ç—å –±–µ–¥—Ä–∞\n" +
			"   - –û–∫—Ä—É–∂–Ω–æ—Å—Ç—å –∏–∫—Ä—ã\n" +
			"3. **–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏** - –¥–µ–ª–∞–π—Ç–µ —Ñ–æ—Ç–æ –≤ –æ–¥–∏–Ω–∞–∫–æ–≤—ã—Ö —É—Å–ª–æ–≤–∏—è—Ö (–æ—Å–≤–µ—â–µ–Ω–∏–µ, –ø–æ–∑–∞, –æ–¥–µ–∂–¥–∞) —Ä–∞–∑ –≤ 4 –Ω–µ–¥–µ–ª–∏\n" +
			"4. **–¢—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω—ã–π –¥–Ω–µ–≤–Ω–∏–∫** - –∑–∞–ø–∏—Å—ã–≤–∞–π—Ç–µ –≤–µ—Å–∞ –∏ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—è –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è\n" +
			"5. **–ü–∏—â–µ–≤–æ–π –¥–Ω–µ–≤–Ω–∏–∫** - –æ—Ç—Å–ª–µ–∂–∏–≤–∞–π—Ç–µ –ø–æ—Ç—Ä–µ–±–ª—è–µ–º—ã–µ –∫–∞–ª–æ—Ä–∏–∏ –∏ –º–∞–∫—Ä–æ–Ω—É—Ç—Ä–∏–µ–Ω—Ç—ã\n\n" +
			"**–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:**\n" +
			"- **–≠–Ω–µ—Ä–≥–∏—è –∏ —Å–∞–º–æ—á—É–≤—Å—Ç–≤–∏–µ** - –æ—Ü–µ–Ω–∏–≤–∞–π—Ç–µ –ø–æ —à–∫–∞–ª–µ –æ—Ç 1 –¥–æ 10\n" +
			"- **–ö–∞—á–µ—Å—Ç–≤–æ —Å–Ω–∞** - –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∏ –æ—â—É—â–µ–Ω–∏–µ –æ—Ç–¥—ã—Ö–∞ –ø–æ—Å–ª–µ —Å–Ω–∞\n" +
			"- **–†–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –Ω–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞—Ö** - –Ω–∞—Å–∫–æ–ª—å–∫–æ –ª–µ–≥–∫–æ/—Ç—Ä—É–¥–Ω–æ –≤—ã–ø–æ–ª–Ω—è—Ç—å —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è\n\n" +
			"**–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è:**\n" +
			"- –ü—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–ª—è –ø–æ–¥—Å—á–µ—Ç–∞ –∫–∞–ª–æ—Ä–∏–π (MyFitnessPal, FatSecret)\n" +
			"- –ü—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–ª—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ (Strong, Jefit, Nike Training Club)\n" +
			"- –§–∏—Ç–Ω–µ—Å-—Ç—Ä–µ–∫–µ—Ä—ã –∏ —É–º–Ω—ã–µ —á–∞—Å—ã –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏\n\n" +
			"**–ö–∞–∫ –æ—Ü–µ–Ω–∏–≤–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã:**\n" +
			"- –ü—Ä–∏ –ø–æ—Ö—É–¥–µ–Ω–∏–∏: –æ–∂–∏–¥–∞–π—Ç–µ –ø–æ—Ç–µ—Ä—é 0.5-1 –∫–≥ –≤ –Ω–µ–¥–µ–ª—é (–±–µ–∑–æ–ø–∞—Å–Ω–∞—è –Ω–æ—Ä–º–∞)\n" +
			"- –ü—Ä–∏ –Ω–∞–±–æ—Ä–µ –º–∞—Å—Å—ã: 0.2-0.5 –∫–≥ –≤ –Ω–µ–¥–µ–ª—é –º–æ–∂–µ—Ç —Å—á–∏—Ç–∞—Ç—å—Å—è —Ö–æ—Ä–æ—à–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º\n" +
			"- –û–±—Ä–∞—â–∞–π—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–æ–≤ —Ç–µ–ª–∞ –∏ —Å–∞–º–æ—á—É–≤—Å—Ç–≤–∏–µ\n" +
			"- –ï—Å–ª–∏ –ø—Ä–æ–≥—Ä–µ—Å—Å –æ—Å—Ç–∞–Ω–æ–≤–∏–ª—Å—è –Ω–∞ 2-3 –Ω–µ–¥–µ–ª–∏, –ø–µ—Ä–µ—Å–º–æ—Ç—Ä–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É –∏ –ø–∏—Ç–∞–Ω–∏–µ\n\n" +
			"**–í–∞–∂–Ω–æ –ø–æ–º–Ω–∏—Ç—å:**\n" +
			"- –ü—Ä–æ–≥—Ä–µ—Å—Å —Ä–µ–¥–∫–æ –±—ã–≤–∞–µ—Ç –ª–∏–Ω–µ–π–Ω—ã–º\n" +
			"- –ù–∞ –≤–µ—Å –≤–ª–∏—è—é—Ç –º–Ω–æ–≥–∏–µ —Ñ–∞–∫—Ç–æ—Ä—ã (–≤–æ–¥–∞, —Å–æ–ª—å, –≥–æ—Ä–º–æ–Ω—ã, —Å—Ç—Ä–µ—Å—Å)\n" +
			"- –û—Ü–µ–Ω–∏–≤–∞–π—Ç–µ –ø—Ä–æ–≥—Ä–µ—Å—Å –∫–æ–º–ø–ª–µ–∫—Å–Ω–æ, –∞ –Ω–µ —Ç–æ–ª—å–∫–æ –ø–æ –≤–µ—Å—É\n" +
			"- –ë—É–¥—å—Ç–µ —Ç–µ—Ä–ø–µ–ª–∏–≤—ã - —É—Å—Ç–æ–π—á–∏–≤—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç—Ä–µ–±—É—é—Ç –≤—Ä–µ–º–µ–Ω–∏"

	case "diabetes":
		// –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø—Ä–∏ –¥–∏–∞–±–µ—Ç–µ
		diabetesText := "ü©∫ **–¢–†–ï–ù–ò–†–û–í–ö–ò –ü–†–ò –î–ò–ê–ë–ï–¢–ï**\n\n"

		if s.Data.Diabetes == "–¥–∞" {
			diabetesText += "**–û—Å–Ω–æ–≤–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ –ø—Ä–∏ –¥–∏–∞–±–µ—Ç–µ:**\n\n" +
				"**–ü–µ—Ä–µ–¥ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–æ–π:**\n" +
				"- –ò–∑–º–µ—Ä—å—Ç–µ —É—Ä–æ–≤–µ–Ω—å –≥–ª—é–∫–æ–∑—ã –≤ –∫—Ä–æ–≤–∏ –ø–µ—Ä–µ–¥ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–æ–π\n" +
				"- –ï—Å–ª–∏ —É—Ä–æ–≤–µ–Ω—å –Ω–∏–∂–µ 5.6 –º–º–æ–ª—å/–ª, —Å—ä–µ—à—å—Ç–µ –Ω–µ–±–æ–ª—å—à—É—é –ø–æ—Ä—Ü–∏—é —É–≥–ª–µ–≤–æ–¥–æ–≤\n" +
				"- –ï—Å–ª–∏ —É—Ä–æ–≤–µ–Ω—å –≤—ã—à–µ 13.9 –º–º–æ–ª—å/–ª, –æ—Ç–ª–æ–∂–∏—Ç–µ –∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω—É—é —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É\n" +
				"- –ò–º–µ–π—Ç–µ —Å —Å–æ–±–æ–π –±—ã—Å—Ç—Ä—ã–µ —É–≥–ª–µ–≤–æ–¥—ã (–≥–ª—é–∫–æ–∑–∞, —Å–æ–∫) –Ω–∞ —Å–ª—É—á–∞–π –≥–∏–ø–æ–≥–ª–∏–∫–µ–º–∏–∏\n" +
				"- –ù–æ—Å–∏—Ç–µ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–æ–Ω–Ω—ã–π –±—Ä–∞—Å–ª–µ—Ç –¥–∏–∞–±–µ—Ç–∏–∫–∞\n\n" +
				"**–í–æ –≤—Ä–µ–º—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏:**\n" +
				"- –û–±—Ä–∞—â–∞–π—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ —Å–∏–º–ø—Ç–æ–º—ã –≥–∏–ø–æ–≥–ª–∏–∫–µ–º–∏–∏ (–¥—Ä–æ–∂—å, —Å–ª–∞–±–æ—Å—Ç—å, –≥–æ–ª–æ–≤–æ–∫—Ä—É–∂–µ–Ω–∏–µ, –ø–æ—Ç–ª–∏–≤–æ—Å—Ç—å)\n" +
				"- –ü—Ä–∏ –¥–ª–∏—Ç–µ–ª—å–Ω—ã—Ö —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞—Ö (–±–æ–ª–µ–µ 45-60 –º–∏–Ω—É—Ç) –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏ –ø—Ä–æ–≤–µ—Ä—è–π—Ç–µ —É—Ä–æ–≤–µ–Ω—å —Å–∞—Ö–∞—Ä–∞\n" +
				"- –ü–µ–π—Ç–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –≤–æ–¥—ã\n\n" +
				"**–ü–æ—Å–ª–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏:**\n" +
				"- –ò–∑–º–µ—Ä—å—Ç–µ —É—Ä–æ–≤–µ–Ω—å –≥–ª—é–∫–æ–∑—ã –ø–æ—Å–ª–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏\n" +
				"- –ë—É–¥—å—Ç–µ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω—ã –∫ –æ—Ç—Å—Ä–æ—á–µ–Ω–Ω–æ–π –≥–∏–ø–æ–≥–ª–∏–∫–µ–º–∏–∏ (–º–æ–∂–µ—Ç –≤–æ–∑–Ω–∏–∫–Ω—É—Ç—å —á–µ—Ä–µ–∑ 4-48 —á–∞—Å–æ–≤)\n" +
				"- –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —É –≤–∞—Å –µ—Å—Ç—å –ø–ª–∞–Ω –ø–∏—Ç–∞–Ω–∏—è –ø–æ—Å–ª–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏\n\n" +
				"**–í—ã–±–æ—Ä —Ç–∏–ø–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫:**\n" +
				"- –ö–æ–º–±–∏–Ω–∏—Ä—É–π—Ç–µ –∫–∞—Ä–¥–∏–æ –∏ —Å–∏–ª–æ–≤—ã–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –¥–ª—è –ª—É—á—à–µ–≥–æ –∫–æ–Ω—Ç—Ä–æ–ª—è —Å–∞—Ö–∞—Ä–∞\n" +
				"- –ù–∞—á–∏–Ω–∞–π—Ç–µ —Å –Ω–∏–∑–∫–æ–π –∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ—Å—Ç–∏ –∏ –ø–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ —É–≤–µ–ª–∏—á–∏–≤–∞–π—Ç–µ –Ω–∞–≥—Ä—É–∑–∫—É\n" +
				"- –°–∏–ª–æ–≤—ã–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ —É–ª—É—á—à–∞—é—Ç —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∫ –∏–Ω—Å—É–ª–∏–Ω—É\n" +
				"- –ê—ç—Ä–æ–±–Ω—ã–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ —É–º–µ—Ä–µ–Ω–Ω–æ–π –∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ—Å—Ç–∏ (—Ö–æ–¥—å–±–∞, –ø–ª–∞–≤–∞–Ω–∏–µ, –≤–µ–ª–æ—Å–∏–ø–µ–¥) —Ö–æ—Ä–æ—à–æ –ø–æ–¥—Ö–æ–¥—è—Ç –¥–ª—è –∫–æ–Ω—Ç—Ä–æ–ª—è —Å–∞—Ö–∞—Ä–∞\n\n" +
				"**–ö–æ—Ä—Ä–µ–∫—Ü–∏—è –¥–æ–∑—ã –∏–Ω—Å—É–ª–∏–Ω–∞ –∏ –ª–µ–∫–∞—Ä—Å—Ç–≤:**\n" +
				"- –ü—Ä–æ–∫–æ–Ω—Å—É–ª—å—Ç–∏—Ä—É–π—Ç–µ—Å—å —Å –≤–∞—à–∏–º —ç–Ω–¥–æ–∫—Ä–∏–Ω–æ–ª–æ–≥–æ–º –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –∫–æ—Ä—Ä–µ–∫—Ü–∏–∏ –¥–æ–∑—ã –∏–Ω—Å—É–ª–∏–Ω–∞ –∏–ª–∏ –ª–µ–∫–∞—Ä—Å—Ç–≤ –ø–µ—Ä–µ–¥ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–æ–π\n" +
				"- –û–±—ã—á–Ω–æ —Ç—Ä–µ–±—É–µ—Ç—Å—è —Å–Ω–∏–∂–µ–Ω–∏–µ –¥–æ–∑—ã –∏–Ω—Å—É–ª–∏–Ω–∞ –ø–µ—Ä–µ–¥ —Ñ–∏–∑–∏—á–µ—Å–∫–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å—é\n\n" +
				"**–í–∞–∂–Ω–æ:**\n" +
				"- –í—Å–µ–≥–¥–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∏—Ä—É–π—Ç–µ—Å—å —Å –≤—Ä–∞—á–æ–º –ø–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º –Ω–æ–≤–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫\n" +
				"- –í–µ–¥–∏—Ç–µ –¥–Ω–µ–≤–Ω–∏–∫, –æ—Ç–º–µ—á–∞—è —É—Ä–æ–≤–µ–Ω—å —Å–∞—Ö–∞—Ä–∞ –¥–æ, –≤–æ –≤—Ä–µ–º—è –∏ –ø–æ—Å–ª–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫\n" +
				"- –ë—É–¥—å—Ç–µ –æ—Å–æ–±–µ–Ω–Ω–æ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω—ã –ø—Ä–∏ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞—Ö –≤ –∂–∞—Ä—É –∏–ª–∏ —Ö–æ–ª–æ–¥\n" +
				"- –°–ª–µ–¥–∏—Ç–µ –∑–∞ —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –Ω–æ–≥ –∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â—É—é –æ–±—É–≤—å\n"
		} else {
			diabetesText += "–£ –≤–∞—Å –Ω–µ —É–∫–∞–∑–∞–Ω –¥–∏–∞–±–µ—Ç, –Ω–æ –≤–æ—Ç –æ–±—â–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–ª–µ–∑–Ω–æ –∑–Ω–∞—Ç—å –≤—Å–µ–º:\n\n" +
				"1. –†–µ–≥—É–ª—è—Ä–Ω—ã–µ —Ñ–∏–∑–∏—á–µ—Å–∫–∏–µ –Ω–∞–≥—Ä—É–∑–∫–∏ –ø–æ–º–æ–≥–∞—é—Ç –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å –Ω–æ—Ä–º–∞–ª—å–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å —Å–∞—Ö–∞—Ä–∞ –≤ –∫—Ä–æ–≤–∏\n" +
				"2. –°–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –ø–∏—Ç–∞–Ω–∏–µ —Å –∫–æ–Ω—Ç—Ä–æ–ª–µ–º –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏—è –ø—Ä–æ—Å—Ç—ã—Ö —É–≥–ª–µ–≤–æ–¥–æ–≤ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –∑–¥–æ—Ä–æ–≤—ã–π –º–µ—Ç–∞–±–æ–ª–∏–∑–º\n" +
				"3. –°–ª–µ–¥–∏—Ç–µ –∑–∞ –æ—â—É—â–µ–Ω–∏—è–º–∏ –≤–æ –≤—Ä–µ–º—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ - —Å–ª–∞–±–æ—Å—Ç—å, –≥–æ–ª–æ–≤–æ–∫—Ä—É–∂–µ–Ω–∏–µ, –ø–æ–≤—ã—à–µ–Ω–Ω–∞—è –∂–∞–∂–¥–∞ –º–æ–≥—É—Ç —É–∫–∞–∑—ã–≤–∞—Ç—å –Ω–∞ –ø—Ä–æ–±–ª–µ–º—ã —Å —Å–∞—Ö–∞—Ä–æ–º\n" +
				"4. –†–µ–≥—É–ª—è—Ä–Ω–æ–µ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–µ –æ–±—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –ø–æ–º–æ–∂–µ—Ç –≤—ã—è–≤–∏—Ç—å –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã –Ω–∞ —Ä–∞–Ω–Ω–µ–π —Å—Ç–∞–¥–∏–∏\n\n" +
				"–ü—Ä–æ—Ñ–∏–ª–∞–∫—Ç–∏–∫–∞ –¥–∏–∞–±–µ—Ç–∞ 2 —Ç–∏–ø–∞:\n" +
				"- –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–π—Ç–µ –∑–¥–æ—Ä–æ–≤—ã–π –≤–µ—Å\n" +
				"- –†–µ–≥—É–ª—è—Ä–Ω–æ –∑–∞–Ω–∏–º–∞–π—Ç–µ—Å—å —Ñ–∏–∑–∏—á–µ—Å–∫–∏–º–∏ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è–º–∏\n" +
				"- –ï—à—å—Ç–µ –∑–¥–æ—Ä–æ–≤—É—é –ø–∏—â—É, –±–æ–≥–∞—Ç—É—é –∫–ª–µ—Ç—á–∞—Ç–∫–æ–π –∏ –Ω–∏–∑–∫—É—é –ø–æ –≥–ª–∏–∫–µ–º–∏—á–µ—Å–∫–æ–º—É –∏–Ω–¥–µ–∫—Å—É\n" +
				"- –û–≥—Ä–∞–Ω–∏—á—å—Ç–µ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ —Å–∞—Ö–∞—Ä–∞ –∏ —Ä–∞—Ñ–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —É–≥–ª–µ–≤–æ–¥–æ–≤\n" +
				"- –ò–∑–±–µ–≥–∞–π—Ç–µ –∫—É—Ä–µ–Ω–∏—è –∏ —á—Ä–µ–∑–º–µ—Ä–Ω–æ–≥–æ —É–ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏—è –∞–ª–∫–æ–≥–æ–ª—è\n"
		}

		return diabetesText

	default:
		return "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Ç–æ—á–Ω–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å –æ –ø—Ä–æ–≥—Ä–∞–º–º–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫."
	}
}

// ProcessButtonCallback –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É
func (s *UserSession) ProcessButtonCallback(data string) (string, error) {
	if len(data) < 4 {
		return "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ", fmt.Errorf("–Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ callback: %s", data)
	}

	// –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–æ–ø—Ä–æ—Å–æ–≤ –æ –ø—Ä–æ–≥—Ä–∞–º–º–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫
	if strings.HasPrefix(data, "ask_") {
		question := strings.TrimPrefix(data, "ask_")
		return s.GetAskQuestionAnswer(question), nil
	}

	var prefix, value string

	// –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—Ä–µ—Ñ–∏–∫—Å –∏ –∑–Ω–∞—á–µ–Ω–∏–µ
	if strings.HasPrefix(data, CallbackSex) {
		prefix = CallbackSex
		value = data[len(CallbackSex):]
	} else if strings.HasPrefix(data, CallbackDiabetes) {
		prefix = CallbackDiabetes
		value = data[len(CallbackDiabetes):]
	} else if strings.HasPrefix(data, CallbackLevel) {
		prefix = CallbackLevel
		value = data[len(CallbackLevel):]
	} else if strings.HasPrefix(data, CallbackGoal) {
		prefix = CallbackGoal
		value = data[len(CallbackGoal):]
	} else if strings.HasPrefix(data, CallbackType) {
		prefix = CallbackType
		value = data[len(CallbackType):]
	} else if strings.HasPrefix(data, CallbackAsk) {
		prefix = CallbackAsk
		value = data[len(CallbackAsk):]
		return s.GetAskQuestionAnswer(value), nil
	} else if data == "pay" {
		return "/pay", nil
	} else {
		return "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞", fmt.Errorf("–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø—Ä–µ—Ñ–∏–∫—Å –≤ callback: %s", data)
	}

	// –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –ø—Ä–µ—Ñ–∏–∫—Å–∞
	switch prefix {
	case CallbackSex:
		s.Data.Sex = map[string]string{
			"male":   "–º—É–∂—Å–∫–æ–π",
			"female": "–∂–µ–Ω—Å–∫–∏–π",
		}[value]
		s.State = StateAskAge

	case CallbackDiabetes:
		s.Data.Diabetes = map[string]string{
			"yes": "–¥–∞",
			"no":  "–Ω–µ—Ç",
		}[value]
		s.State = StateAskLevel

	case CallbackLevel:
		s.Data.Level = map[string]string{
			"beginner":     "–Ω–∞—á–∏–Ω–∞—é—â–∏–π",
			"intermediate": "—Å—Ä–µ–¥–Ω–∏–π",
			"advanced":     "–ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π",
		}[value]
		s.State = StateAskGoal

	case CallbackGoal:
		s.Data.FitnessGoal = map[string]string{
			"weight_loss": "–ø–æ—Ö—É–¥–µ–Ω–∏–µ",
			"muscle_gain": "–Ω–∞–±–æ—Ä –º–∞—Å—Å—ã",
			"maintenance": "–ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏–µ —Ñ–æ—Ä–º—ã",
			"endurance":   "—É–ª—É—á—à–µ–Ω–∏–µ –≤—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç–∏",
		}[value]
		s.State = StateAskType

	case CallbackType:
		s.Data.FitnessType = map[string]string{
			"strength": "—Å–∏–ª–æ–≤—ã–µ",
			"cardio":   "–∫–∞—Ä–¥–∏–æ",
			"mixed":    "—Å–º–µ—à–∞–Ω–Ω—ã–µ",
			"yoga":     "–π–æ–≥–∞",
			"pilates":  "–ø–∏–ª–∞—Ç–µ—Å",
			"other":    "–¥—Ä—É–≥–æ–µ",
		}[value]
		s.State = StatePayment
	}

	// –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å
	return s.GetNextQuestion(), nil
}

// ProcessInput –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–≤–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
func (s *UserSession) ProcessInput(input string) (string, error) {
	switch s.State {
	case StateInitial:
		s.State = StateAskSex
		return "–î–∞–≤–∞–π—Ç–µ —Å–æ–∑–¥–∞–¥–∏–º –¥–ª—è –≤–∞—Å –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—É—é —Ñ–∏—Ç–Ω–µ—Å-–ø—Ä–æ–≥—Ä–∞–º–º—É! –°–Ω–∞—á–∞–ª–∞ —è –∑–∞–¥–∞–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–æ–ø—Ä–æ—Å–æ–≤.\n\n–£–∫–∞–∂–∏—Ç–µ –≤–∞—à –ø–æ–ª:", nil

	case StateAskSex:
		// –ï—Å–ª–∏ –≤–≤–æ–¥ —Ç–µ–∫—Å—Ç–æ–º, –∞ –Ω–µ —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫–∏
		s.Data.Sex = input
		s.State = StateAskAge
		return "–£–∫–∞–∂–∏—Ç–µ –≤–∞—à –≤–æ–∑—Ä–∞—Å—Ç (–ø–æ–ª–Ω—ã—Ö –ª–µ—Ç):", nil

	case StateAskAge:
		age, err := strconv.Atoi(input)
		if err != nil {
			return "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–æ–∑—Ä–∞—Å—Ç —Ü–∏—Ñ—Ä–∞–º–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 25):", nil
		}
		s.Data.Age = age
		s.State = StateAskHeight
		return "–£–∫–∞–∂–∏—Ç–µ –≤–∞—à —Ä–æ—Å—Ç –≤ —Å–∞–Ω—Ç–∏–º–µ—Ç—Ä–∞—Ö (–Ω–∞–ø—Ä–∏–º–µ—Ä, 175):", nil

	case StateAskHeight:
		height, err := strconv.Atoi(input)
		if err != nil {
			return "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Ä–æ—Å—Ç —Ü–∏—Ñ—Ä–∞–º–∏ –≤ —Å–∞–Ω—Ç–∏–º–µ—Ç—Ä–∞—Ö (–Ω–∞–ø—Ä–∏–º–µ—Ä, 175):", nil
		}
		s.Data.Height = height
		s.State = StateAskWeight
		return "–£–∫–∞–∂–∏—Ç–µ –≤–∞—à –≤–µ—Å –≤ –∫–∏–ª–æ–≥—Ä–∞–º–º–∞—Ö (–Ω–∞–ø—Ä–∏–º–µ—Ä, 70):", nil

	case StateAskWeight:
		weight, err := strconv.Atoi(input)
		if err != nil {
			return "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–µ—Å —Ü–∏—Ñ—Ä–∞–º–∏ –≤ –∫–∏–ª–æ–≥—Ä–∞–º–º–∞—Ö (–Ω–∞–ø—Ä–∏–º–µ—Ä, 70):", nil
		}
		s.Data.Weight = weight
		s.State = StateAskDiabetes
		return "–£ –≤–∞—Å –µ—Å—Ç—å –¥–∏–∞–±–µ—Ç?", nil

	case StateAskDiabetes:
		// –ï—Å–ª–∏ –≤–≤–æ–¥ —Ç–µ–∫—Å—Ç–æ–º, –∞ –Ω–µ —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫–∏
		s.Data.Diabetes = input
		s.State = StateAskLevel
		return "–û—Ü–µ–Ω–∏—Ç–µ –≤–∞—à —Ç–µ–∫—É—â–∏–π —É—Ä–æ–≤–µ–Ω—å —Ñ–∏–∑–∏—á–µ—Å–∫–æ–π –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏:", nil

	case StateAskLevel:
		// –ï—Å–ª–∏ –≤–≤–æ–¥ —Ç–µ–∫—Å—Ç–æ–º, –∞ –Ω–µ —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫–∏
		s.Data.Level = input
		s.State = StateAskGoal
		return "–ö–∞–∫–æ–≤–∞ –≤–∞—à–∞ –≥–ª–∞–≤–Ω–∞—è —Ü–µ–ª—å?", nil

	case StateAskGoal:
		// –ï—Å–ª–∏ –≤–≤–æ–¥ —Ç–µ–∫—Å—Ç–æ–º, –∞ –Ω–µ —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫–∏
		s.Data.FitnessGoal = input
		s.State = StateAskType
		return "–ö–∞–∫–æ–π —Ç–∏–ø —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ –≤—ã –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ—Ç–µ?", nil

	case StateAskType:
		// –ï—Å–ª–∏ –≤–≤–æ–¥ —Ç–µ–∫—Å—Ç–æ–º, –∞ –Ω–µ —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫–∏
		s.Data.FitnessType = input
		s.State = StatePayment
		return fmt.Sprintf("–°–ø–∞—Å–∏–±–æ! –í–∞—à–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è —Å–æ–±—Ä–∞–Ω–∞:\n\n%s\n\n–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–ø–ª–∞—Ç–∏—Ç–µ —É—Å–ª—É–≥—É. –í–≤–µ–¥–∏—Ç–µ /pay", s.Data.String()), nil

	case StatePayment:
		if input == "/pay" {
			// –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞
			paymentLink, err := CreatePayment(s.UserID)
			if err != nil {
				return "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–ª–∞—Ç–µ–∂–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.", err
			}
			return fmt.Sprintf("–î–ª—è –æ–ø–ª–∞—Ç—ã –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ: %s", paymentLink), nil
		}
		return "–î–ª—è –æ–ø–ª–∞—Ç—ã –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /pay", nil

	case StateComplete:
		return "–í–∞—à–∞ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ —É–∂–µ —Å–æ–∑–¥–∞–Ω–∞. –ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /start", nil

	default:
		return "–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞ —Å –∫–æ–º–∞–Ω–¥—ã /start", nil
	}
}

// SetPaymentCompleted —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å—Ç–∞—Ç—É—Å –æ–ø–ª–∞—Ç—ã –∫–∞–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–π
func (s *UserSession) SetPaymentCompleted(paymentID string) {
	s.Data.PaymentID = paymentID
	s.State = StateComplete
	s.Data.CreatedAt = time.Now()
}
